// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Content renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Content />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="tile is-vertical is-8"
>
          <div
                    className="tile is-parent"
          >
                    <Map
                              disableOptimization={false}
                              geographicalWeightData={Array []}
                              selectedMonth={0}
                    />
          </div>
          <div
                    className="tile is-parent"
          >
                    <Timeline
                              length={-1}
                              month={0}
                              onChange={[Function]}
                    />
          </div>
          <div
                    className="tile is-parent"
          >
                    <Portfolio />
          </div>
</div>,
        <div
          className="tile"
>
          <div
                    className="tile is-parent is-vertical"
          >
                    <Assets />
          </div>
</div>,
      ],
      "className": "tile is-ancestor",
      "style": Object {
        "margin": "auto",
        "width": "99%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="tile is-parent"
>
              <Map
                            disableOptimization={false}
                            geographicalWeightData={Array []}
                            selectedMonth={0}
              />
</div>,
            <div
              className="tile is-parent"
>
              <Timeline
                            length={-1}
                            month={0}
                            onChange={[Function]}
              />
</div>,
            <div
              className="tile is-parent"
>
              <Portfolio />
</div>,
          ],
          "className": "tile is-vertical is-8",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Map
                disableOptimization={false}
                geographicalWeightData={Array []}
                selectedMonth={0}
/>,
              "className": "tile is-parent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disableOptimization": false,
                "geographicalWeightData": Array [],
                "selectedMonth": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Timeline
                length={-1}
                month={0}
                onChange={[Function]}
/>,
              "className": "tile is-parent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "length": -1,
                "month": 0,
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Portfolio />,
              "className": "tile is-parent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="tile is-parent is-vertical"
>
            <Assets />
</div>,
          "className": "tile",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Assets />,
            "className": "tile is-parent is-vertical",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="tile is-vertical is-8"
>
            <div
                        className="tile is-parent"
            >
                        <Map
                                    disableOptimization={false}
                                    geographicalWeightData={Array []}
                                    selectedMonth={0}
                        />
            </div>
            <div
                        className="tile is-parent"
            >
                        <Timeline
                                    length={-1}
                                    month={0}
                                    onChange={[Function]}
                        />
            </div>
            <div
                        className="tile is-parent"
            >
                        <Portfolio />
            </div>
</div>,
          <div
            className="tile"
>
            <div
                        className="tile is-parent is-vertical"
            >
                        <Assets />
            </div>
</div>,
        ],
        "className": "tile is-ancestor",
        "style": Object {
          "margin": "auto",
          "width": "99%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="tile is-parent"
>
                <Map
                                disableOptimization={false}
                                geographicalWeightData={Array []}
                                selectedMonth={0}
                />
</div>,
              <div
                className="tile is-parent"
>
                <Timeline
                                length={-1}
                                month={0}
                                onChange={[Function]}
                />
</div>,
              <div
                className="tile is-parent"
>
                <Portfolio />
</div>,
            ],
            "className": "tile is-vertical is-8",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Map
                  disableOptimization={false}
                  geographicalWeightData={Array []}
                  selectedMonth={0}
/>,
                "className": "tile is-parent",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disableOptimization": false,
                  "geographicalWeightData": Array [],
                  "selectedMonth": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Timeline
                  length={-1}
                  month={0}
                  onChange={[Function]}
/>,
                "className": "tile is-parent",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "length": -1,
                  "month": 0,
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Portfolio />,
                "className": "tile is-parent",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="tile is-parent is-vertical"
>
              <Assets />
</div>,
            "className": "tile",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Assets />,
              "className": "tile is-parent is-vertical",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
